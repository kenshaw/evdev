package evdev

import "strconv"

// Code generated by gen.sh; DO NOT EDIT.

const (
	_AbsoluteType_name_0 = "XYZRXRYRZThrottleRudderWheelGasBrake"
	_AbsoluteType_name_1 = "Hat0XHat0YHat1XHat1YHat2XHat2YHat3XHat3YPressureDistanceTiltXTiltYToolWidth"
	_AbsoluteType_name_2 = "Volume"
	_AbsoluteType_name_3 = "Misc"
	_AbsoluteType_name_4 = "MTSlotMTTouchMajorMTTouchMinorMTWidthMajorMTWidthMinorMTOrientationMTPositionXMTPositionYMTToolTYPEMTBlobIdMTTrackingIdMTPressureMTDistanceMTToolXMTToolY"
)

var (
	_AbsoluteType_index_0 = [...]uint8{0, 1, 2, 3, 5, 7, 9, 17, 23, 28, 31, 36}
	_AbsoluteType_index_1 = [...]uint8{0, 5, 10, 15, 20, 25, 30, 35, 40, 48, 56, 61, 66, 75}
	_AbsoluteType_index_4 = [...]uint8{0, 6, 18, 30, 42, 54, 67, 78, 89, 99, 107, 119, 129, 139, 146, 153}
)

func (i AbsoluteType) String() string {
	switch {
	case 0 <= i && i <= 10:
		return _AbsoluteType_name_0[_AbsoluteType_index_0[i]:_AbsoluteType_index_0[i+1]]
	case 16 <= i && i <= 28:
		i -= 16
		return _AbsoluteType_name_1[_AbsoluteType_index_1[i]:_AbsoluteType_index_1[i+1]]
	case i == 32:
		return _AbsoluteType_name_2
	case i == 40:
		return _AbsoluteType_name_3
	case 47 <= i && i <= 61:
		i -= 47
		return _AbsoluteType_name_4[_AbsoluteType_index_4[i]:_AbsoluteType_index_4[i+1]]
	default:
		return "AbsoluteType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const (
	_BusType_name_0 = "PCIISAPNPUSBHILBluetoothVirtual"
	_BusType_name_1 = "ISAI8042XTKBDRS232GamePortParallelPortAmigaADBI2CHostGSCAtariSPIRMICECIntelISHTP"
)

var (
	_BusType_index_0 = [...]uint8{0, 3, 9, 12, 15, 24, 31}
	_BusType_index_1 = [...]uint8{0, 3, 8, 13, 18, 26, 38, 43, 46, 49, 53, 56, 61, 64, 67, 70, 80}
)

func (i BusType) String() string {
	switch {
	case 1 <= i && i <= 6:
		i -= 1
		return _BusType_name_0[_BusType_index_0[i]:_BusType_index_0[i+1]]
	case 16 <= i && i <= 31:
		i -= 16
		return _BusType_name_1[_BusType_index_1[i]:_BusType_index_1[i+1]]
	default:
		return "BusType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const _EffectType_name = "RumblePeriodicConstantSpringFrictionDamperInertiaRampSquareTriangleSineSawUpSawDownCustom"

var _EffectType_index = [...]uint8{0, 6, 14, 22, 28, 36, 42, 49, 53, 59, 67, 71, 76, 83, 89}

func (i EffectType) String() string {
	i -= 80
	if i < 0 || i >= EffectType(len(_EffectType_index)-1) {
		return "EffectType(" + strconv.FormatInt(int64(i+80), 10) + ")"
	}
	return _EffectType_name[_EffectType_index[i]:_EffectType_index[i+1]]
}

const (
	_EffectDirType_name_0 = "Down"
	_EffectDirType_name_1 = "Left"
	_EffectDirType_name_2 = "Up"
	_EffectDirType_name_3 = "Right"
)

func (i EffectDirType) String() string {
	switch {
	case i == 0:
		return _EffectDirType_name_0
	case i == 16384:
		return _EffectDirType_name_1
	case i == 32768:
		return _EffectDirType_name_2
	case i == 49152:
		return _EffectDirType_name_3
	default:
		return "EffectDirType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const _EffectPropType_name = "GainAutoCenter"

var _EffectPropType_index = [...]uint8{0, 4, 14}

func (i EffectPropType) String() string {
	i -= 96
	if i < 0 || i >= EffectPropType(len(_EffectPropType_index)-1) {
		return "EffectPropType(" + strconv.FormatInt(int64(i+96), 10) + ")"
	}
	return _EffectPropType_name[_EffectPropType_index[i]:_EffectPropType_index[i+1]]
}

const _EffectStatusType_name = "StoppedPlaying"

var _EffectStatusType_index = [...]uint8{0, 7, 14}

func (i EffectStatusType) String() string {
	if i < 0 || i >= EffectStatusType(len(_EffectStatusType_index)-1) {
		return "EffectStatusType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _EffectStatusType_name[_EffectStatusType_index[i]:_EffectStatusType_index[i+1]]
}

const (
	_EventType_name_0 = "SyncKeyRelativeAbsoluteMiscSwitch"
	_EventType_name_1 = "LEDSound"
	_EventType_name_2 = "RepeatEffectPowerEffectStatus"
)

var (
	_EventType_index_0 = [...]uint8{0, 4, 7, 15, 23, 27, 33}
	_EventType_index_1 = [...]uint8{0, 3, 8}
	_EventType_index_2 = [...]uint8{0, 6, 12, 17, 29}
)

func (i EventType) String() string {
	switch {
	case 0 <= i && i <= 5:
		return _EventType_name_0[_EventType_index_0[i]:_EventType_index_0[i+1]]
	case 17 <= i && i <= 18:
		i -= 17
		return _EventType_name_1[_EventType_index_1[i]:_EventType_index_1[i+1]]
	case 20 <= i && i <= 23:
		i -= 20
		return _EventType_name_2[_EventType_index_2[i]:_EventType_index_2[i+1]]
	default:
		return "EventType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const _InputType_name = "KeyboardMouseJoystick"

var _InputType_index = [...]uint8{0, 8, 13, 21}

func (i InputType) String() string {
	if i < 0 || i >= InputType(len(_InputType_index)-1) {
		return "InputType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _InputType_name[_InputType_index[i]:_InputType_index[i+1]]
}

const _InputPropType_name = "PointerDirectButtonPadSemiMT"

var _InputPropType_index = [...]uint8{0, 7, 13, 22, 28}

func (i InputPropType) String() string {
	if i < 0 || i >= InputPropType(len(_InputPropType_index)-1) {
		return "InputPropType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _InputPropType_name[_InputPropType_index[i]:_InputPropType_index[i+1]]
}

const _KeyType_name = "ReservedEscape1234567890MinusEqualBackSpaceTabQWERTYUIOPLeftBraceRightBraceEnterLeftCtrlASDFGHJKLSemiColonApostropheGraveLeftShiftBackSlashZXCVBNMCommaDotSlashRightShiftKPAsteriskLeftAltSpaceCapsLockF1F2F3F4F5F6F7F8F9F10NumLockScrollLockKP7KP8KP9KPMinusKP4KP5KP6KPPlusKP1KP2KP3KP0KPDotZenkakuhankaku102NDF11F12ROKatakanaHiraganaHenkanKatakanaHiraganaMuhenkanKPJPCommaKPEnterRightCtrlKPSlashSysRQRightAltLineFeedHomeUpPageUpLeftRightEndDownPageDownInsertDeleteMacroMuteVolumeDownVolumeUpPowerKPEqualKPPlusMinusPauseScaleKPCommaHangulHanjaYenLeftMetaRightMetaComposeStopAgainPropsUndoFrontCopyOpenPasteFindCutHelpMenuCalcSetupSleepWakeupFileSendFileDeleteFileXFerProg1Prog2WWWMSDOSScreenlockDirectionCycleWindowsMailBookmarksComputerBackForwardCloseCDEjectCDEjectCloseCDNextSongPlayPausePreviousSongStopCDRecordRewindPhoneISOConfigHomepageRefreshExitMoveEditScrollUpScrollDownKPLeftParenKPRightParenNewRedoF13F14F15F16F17F18F19F20F21F22F23F24PlayCDPauseCDProg3Prog4DashboardSuspendClosePlayFastForwardBassBoostPrintHPCaneraSoundQuestionEmailChatSearchConnectFinanceSportShopAltEraseCancelBrightnessDownBrightnessUpMediaSwitchVideoModeKBDIllumToggleKBDIllumDownKBDIllumUpSendReplyForwardMailSaveDocumentsBatteryBluetoothWLANUWBUnknownVideoNextVideoPreviousBrightnessCycleBrightnessZeroDisplayOffWIMaxRFKillMicMuteBtn0Btn1Btn2Btn3Btn4Btn5Btn6Btn7Btn8Btn9BtnLeftBtnRightBtnMiddleBtnSideBtnExtraBtnForwardBtnBackBtnTaskBtnTriggerBtnThumbBtnThumb2BtnTopBtnTop2BtnPinkieBtnBaseBtnBase2BtnBase3BtnBase4BtnBase5BtnBase6BtnDeadBtnABtnBBtnCBtnXBtnYBtnZBtnTLBtnTRBtnTL2BtnTR2BtnSelectBtnStartBtnModeBtnThumbLBtnThumbRBtnToolPenBtnTooLRubberBtnToolBrushBtnToolPencilBtnToolAirbrushBtnToolFingerBtnToolMouseBtnToolLensBtnToolQuintTapBtnTouchBtnStylusBtnStylus2BtnToolDoubleTapBtnToolTrippleTapBtnToolQuadTapBtnGearDownBtnGearUpOkSelectGotoClearPower2OptionInfoTimeVendorArchiveProgramChannelFavoritesEPGPVRMHPLanguageTitleSubtitleAngleZoomModeKeyboardScreenPCTVTV2VCRVCR2SATSAT2CDTapeRadioTunerPlayerTextDVDAUXMP3AudioVideoDirectoryListMemoCalenderRedGreenYellowBlueChannelUpChannelDownFirstLastABNextRestartSlowShuffleBreakPreviousDigitsTeenTwenVideoPhoneGamesZoomInZoomOutZoomResetWordProcessorEditorSpreadsheetGraphicsEditorPresentationDatabaseNewsVoiceMailAddressBookMessengerDisplayToggleSpellCheckLogoffDollarEuroFrameBackframeForwardContextMenuMediaRepeat10ChannelsUp10ChannelsDownImagesDelEOLDelEOSInsLineDelLineFNFNEscFNF1FNF2FNF3FNF4FNF5FNF6FNF7FNF8FNF9FNF10FNF11FNF12FN1FN2FNDFNEFNFFNSFNBBRLDot1BRLDot2BRLDot3BRLDot4BRLDot5BRLDot6BRLDot7BRLDot8BRLDot9BRLDot10Numeric0Numeric1Numeric2Numeric3Numeric4Numeric5Numeric6Numeric7Numeric8Numeric9NumericStarNumericPoundCameraFocusWPSButtonTouchpadToggleTouchpadOnTouchpadOffCameraZoomInCameraZoomOutCameraUpCameraDownCameraLeftCameraRightAttendantOnAttendantOffAttendantToggleLightsToggleBtnTriggerHappy1BtnTriggerHappy2BtnTriggerHappy3BtnTriggerHappy4BtnTriggerHappy5BtnTriggerHappy6BtnTriggerHappy7BtnTriggerHappy8BtnTriggerHappy9BtnTriggerHappy10BtnTriggerHappy11BtnTriggerHappy12BtnTriggerHappy13BtnTriggerHappy14BtnTriggerHappy15BtnTriggerHappy16BtnTriggerHappy17BtnTriggerHappy18BtnTriggerHappy19BtnTriggerHappy20BtnTriggerHappy21BtnTriggerHappy22BtnTriggerHappy23BtnTriggerHappy24BtnTriggerHappy25BtnTriggerHappy26BtnTriggerHappy27BtnTriggerHappy28BtnTriggerHappy29BtnTriggerHappy30BtnTriggerHappy31BtnTriggerHappy32BtnTriggerHappy33BtnTriggerHappy34BtnTriggerHappy35BtnTriggerHappy36BtnTriggerHappy37BtnTriggerHappy38BtnTriggerHappy39BtnTriggerHappy40"

var _KeyType_map = map[KeyType]string{
	0:   _KeyType_name[0:8],
	1:   _KeyType_name[8:14],
	2:   _KeyType_name[14:15],
	3:   _KeyType_name[15:16],
	4:   _KeyType_name[16:17],
	5:   _KeyType_name[17:18],
	6:   _KeyType_name[18:19],
	7:   _KeyType_name[19:20],
	8:   _KeyType_name[20:21],
	9:   _KeyType_name[21:22],
	10:  _KeyType_name[22:23],
	11:  _KeyType_name[23:24],
	12:  _KeyType_name[24:29],
	13:  _KeyType_name[29:34],
	14:  _KeyType_name[34:43],
	15:  _KeyType_name[43:46],
	16:  _KeyType_name[46:47],
	17:  _KeyType_name[47:48],
	18:  _KeyType_name[48:49],
	19:  _KeyType_name[49:50],
	20:  _KeyType_name[50:51],
	21:  _KeyType_name[51:52],
	22:  _KeyType_name[52:53],
	23:  _KeyType_name[53:54],
	24:  _KeyType_name[54:55],
	25:  _KeyType_name[55:56],
	26:  _KeyType_name[56:65],
	27:  _KeyType_name[65:75],
	28:  _KeyType_name[75:80],
	29:  _KeyType_name[80:88],
	30:  _KeyType_name[88:89],
	31:  _KeyType_name[89:90],
	32:  _KeyType_name[90:91],
	33:  _KeyType_name[91:92],
	34:  _KeyType_name[92:93],
	35:  _KeyType_name[93:94],
	36:  _KeyType_name[94:95],
	37:  _KeyType_name[95:96],
	38:  _KeyType_name[96:97],
	39:  _KeyType_name[97:106],
	40:  _KeyType_name[106:116],
	41:  _KeyType_name[116:121],
	42:  _KeyType_name[121:130],
	43:  _KeyType_name[130:139],
	44:  _KeyType_name[139:140],
	45:  _KeyType_name[140:141],
	46:  _KeyType_name[141:142],
	47:  _KeyType_name[142:143],
	48:  _KeyType_name[143:144],
	49:  _KeyType_name[144:145],
	50:  _KeyType_name[145:146],
	51:  _KeyType_name[146:151],
	52:  _KeyType_name[151:154],
	53:  _KeyType_name[154:159],
	54:  _KeyType_name[159:169],
	55:  _KeyType_name[169:179],
	56:  _KeyType_name[179:186],
	57:  _KeyType_name[186:191],
	58:  _KeyType_name[191:199],
	59:  _KeyType_name[199:201],
	60:  _KeyType_name[201:203],
	61:  _KeyType_name[203:205],
	62:  _KeyType_name[205:207],
	63:  _KeyType_name[207:209],
	64:  _KeyType_name[209:211],
	65:  _KeyType_name[211:213],
	66:  _KeyType_name[213:215],
	67:  _KeyType_name[215:217],
	68:  _KeyType_name[217:220],
	69:  _KeyType_name[220:227],
	70:  _KeyType_name[227:237],
	71:  _KeyType_name[237:240],
	72:  _KeyType_name[240:243],
	73:  _KeyType_name[243:246],
	74:  _KeyType_name[246:253],
	75:  _KeyType_name[253:256],
	76:  _KeyType_name[256:259],
	77:  _KeyType_name[259:262],
	78:  _KeyType_name[262:268],
	79:  _KeyType_name[268:271],
	80:  _KeyType_name[271:274],
	81:  _KeyType_name[274:277],
	82:  _KeyType_name[277:280],
	83:  _KeyType_name[280:285],
	85:  _KeyType_name[285:299],
	86:  _KeyType_name[299:304],
	87:  _KeyType_name[304:307],
	88:  _KeyType_name[307:310],
	89:  _KeyType_name[310:312],
	90:  _KeyType_name[312:320],
	91:  _KeyType_name[320:328],
	92:  _KeyType_name[328:334],
	93:  _KeyType_name[334:350],
	94:  _KeyType_name[350:358],
	95:  _KeyType_name[358:367],
	96:  _KeyType_name[367:374],
	97:  _KeyType_name[374:383],
	98:  _KeyType_name[383:390],
	99:  _KeyType_name[390:395],
	100: _KeyType_name[395:403],
	101: _KeyType_name[403:411],
	102: _KeyType_name[411:415],
	103: _KeyType_name[415:417],
	104: _KeyType_name[417:423],
	105: _KeyType_name[423:427],
	106: _KeyType_name[427:432],
	107: _KeyType_name[432:435],
	108: _KeyType_name[435:439],
	109: _KeyType_name[439:447],
	110: _KeyType_name[447:453],
	111: _KeyType_name[453:459],
	112: _KeyType_name[459:464],
	113: _KeyType_name[464:468],
	114: _KeyType_name[468:478],
	115: _KeyType_name[478:486],
	116: _KeyType_name[486:491],
	117: _KeyType_name[491:498],
	118: _KeyType_name[498:509],
	119: _KeyType_name[509:514],
	120: _KeyType_name[514:519],
	121: _KeyType_name[519:526],
	122: _KeyType_name[526:532],
	123: _KeyType_name[532:537],
	124: _KeyType_name[537:540],
	125: _KeyType_name[540:548],
	126: _KeyType_name[548:557],
	127: _KeyType_name[557:564],
	128: _KeyType_name[564:568],
	129: _KeyType_name[568:573],
	130: _KeyType_name[573:578],
	131: _KeyType_name[578:582],
	132: _KeyType_name[582:587],
	133: _KeyType_name[587:591],
	134: _KeyType_name[591:595],
	135: _KeyType_name[595:600],
	136: _KeyType_name[600:604],
	137: _KeyType_name[604:607],
	138: _KeyType_name[607:611],
	139: _KeyType_name[611:615],
	140: _KeyType_name[615:619],
	141: _KeyType_name[619:624],
	142: _KeyType_name[624:629],
	143: _KeyType_name[629:635],
	144: _KeyType_name[635:639],
	145: _KeyType_name[639:647],
	146: _KeyType_name[647:657],
	147: _KeyType_name[657:661],
	148: _KeyType_name[661:666],
	149: _KeyType_name[666:671],
	150: _KeyType_name[671:674],
	151: _KeyType_name[674:679],
	152: _KeyType_name[679:689],
	153: _KeyType_name[689:698],
	154: _KeyType_name[698:710],
	155: _KeyType_name[710:714],
	156: _KeyType_name[714:723],
	157: _KeyType_name[723:731],
	158: _KeyType_name[731:735],
	159: _KeyType_name[735:742],
	160: _KeyType_name[742:749],
	161: _KeyType_name[749:756],
	162: _KeyType_name[756:768],
	163: _KeyType_name[768:776],
	164: _KeyType_name[776:785],
	165: _KeyType_name[785:797],
	166: _KeyType_name[797:803],
	167: _KeyType_name[803:809],
	168: _KeyType_name[809:815],
	169: _KeyType_name[815:820],
	170: _KeyType_name[820:823],
	171: _KeyType_name[823:829],
	172: _KeyType_name[829:837],
	173: _KeyType_name[837:844],
	174: _KeyType_name[844:848],
	175: _KeyType_name[848:852],
	176: _KeyType_name[852:856],
	177: _KeyType_name[856:864],
	178: _KeyType_name[864:874],
	179: _KeyType_name[874:885],
	180: _KeyType_name[885:897],
	181: _KeyType_name[897:900],
	182: _KeyType_name[900:904],
	183: _KeyType_name[904:907],
	184: _KeyType_name[907:910],
	185: _KeyType_name[910:913],
	186: _KeyType_name[913:916],
	187: _KeyType_name[916:919],
	188: _KeyType_name[919:922],
	189: _KeyType_name[922:925],
	190: _KeyType_name[925:928],
	191: _KeyType_name[928:931],
	192: _KeyType_name[931:934],
	193: _KeyType_name[934:937],
	194: _KeyType_name[937:940],
	200: _KeyType_name[940:946],
	201: _KeyType_name[946:953],
	202: _KeyType_name[953:958],
	203: _KeyType_name[958:963],
	204: _KeyType_name[963:972],
	205: _KeyType_name[972:979],
	206: _KeyType_name[979:984],
	207: _KeyType_name[984:988],
	208: _KeyType_name[988:999],
	209: _KeyType_name[999:1008],
	210: _KeyType_name[1008:1013],
	211: _KeyType_name[1013:1015],
	212: _KeyType_name[1015:1021],
	213: _KeyType_name[1021:1026],
	214: _KeyType_name[1026:1034],
	215: _KeyType_name[1034:1039],
	216: _KeyType_name[1039:1043],
	217: _KeyType_name[1043:1049],
	218: _KeyType_name[1049:1056],
	219: _KeyType_name[1056:1063],
	220: _KeyType_name[1063:1068],
	221: _KeyType_name[1068:1072],
	222: _KeyType_name[1072:1080],
	223: _KeyType_name[1080:1086],
	224: _KeyType_name[1086:1100],
	225: _KeyType_name[1100:1112],
	226: _KeyType_name[1112:1117],
	227: _KeyType_name[1117:1132],
	228: _KeyType_name[1132:1146],
	229: _KeyType_name[1146:1158],
	230: _KeyType_name[1158:1168],
	231: _KeyType_name[1168:1172],
	232: _KeyType_name[1172:1177],
	233: _KeyType_name[1177:1188],
	234: _KeyType_name[1188:1192],
	235: _KeyType_name[1192:1201],
	236: _KeyType_name[1201:1208],
	237: _KeyType_name[1208:1217],
	238: _KeyType_name[1217:1221],
	239: _KeyType_name[1221:1224],
	240: _KeyType_name[1224:1231],
	241: _KeyType_name[1231:1240],
	242: _KeyType_name[1240:1253],
	243: _KeyType_name[1253:1268],
	244: _KeyType_name[1268:1282],
	245: _KeyType_name[1282:1292],
	246: _KeyType_name[1292:1297],
	247: _KeyType_name[1297:1303],
	248: _KeyType_name[1303:1310],
	256: _KeyType_name[1310:1314],
	257: _KeyType_name[1314:1318],
	258: _KeyType_name[1318:1322],
	259: _KeyType_name[1322:1326],
	260: _KeyType_name[1326:1330],
	261: _KeyType_name[1330:1334],
	262: _KeyType_name[1334:1338],
	263: _KeyType_name[1338:1342],
	264: _KeyType_name[1342:1346],
	265: _KeyType_name[1346:1350],
	272: _KeyType_name[1350:1357],
	273: _KeyType_name[1357:1365],
	274: _KeyType_name[1365:1374],
	275: _KeyType_name[1374:1381],
	276: _KeyType_name[1381:1389],
	277: _KeyType_name[1389:1399],
	278: _KeyType_name[1399:1406],
	279: _KeyType_name[1406:1413],
	288: _KeyType_name[1413:1423],
	289: _KeyType_name[1423:1431],
	290: _KeyType_name[1431:1440],
	291: _KeyType_name[1440:1446],
	292: _KeyType_name[1446:1453],
	293: _KeyType_name[1453:1462],
	294: _KeyType_name[1462:1469],
	295: _KeyType_name[1469:1477],
	296: _KeyType_name[1477:1485],
	297: _KeyType_name[1485:1493],
	298: _KeyType_name[1493:1501],
	299: _KeyType_name[1501:1509],
	303: _KeyType_name[1509:1516],
	304: _KeyType_name[1516:1520],
	305: _KeyType_name[1520:1524],
	306: _KeyType_name[1524:1528],
	307: _KeyType_name[1528:1532],
	308: _KeyType_name[1532:1536],
	309: _KeyType_name[1536:1540],
	310: _KeyType_name[1540:1545],
	311: _KeyType_name[1545:1550],
	312: _KeyType_name[1550:1556],
	313: _KeyType_name[1556:1562],
	314: _KeyType_name[1562:1571],
	315: _KeyType_name[1571:1579],
	316: _KeyType_name[1579:1586],
	317: _KeyType_name[1586:1595],
	318: _KeyType_name[1595:1604],
	320: _KeyType_name[1604:1614],
	321: _KeyType_name[1614:1627],
	322: _KeyType_name[1627:1639],
	323: _KeyType_name[1639:1652],
	324: _KeyType_name[1652:1667],
	325: _KeyType_name[1667:1680],
	326: _KeyType_name[1680:1692],
	327: _KeyType_name[1692:1703],
	328: _KeyType_name[1703:1718],
	330: _KeyType_name[1718:1726],
	331: _KeyType_name[1726:1735],
	332: _KeyType_name[1735:1745],
	333: _KeyType_name[1745:1761],
	334: _KeyType_name[1761:1778],
	335: _KeyType_name[1778:1792],
	336: _KeyType_name[1792:1803],
	337: _KeyType_name[1803:1812],
	352: _KeyType_name[1812:1814],
	353: _KeyType_name[1814:1820],
	354: _KeyType_name[1820:1824],
	355: _KeyType_name[1824:1829],
	356: _KeyType_name[1829:1835],
	357: _KeyType_name[1835:1841],
	358: _KeyType_name[1841:1845],
	359: _KeyType_name[1845:1849],
	360: _KeyType_name[1849:1855],
	361: _KeyType_name[1855:1862],
	362: _KeyType_name[1862:1869],
	363: _KeyType_name[1869:1876],
	364: _KeyType_name[1876:1885],
	365: _KeyType_name[1885:1888],
	366: _KeyType_name[1888:1891],
	367: _KeyType_name[1891:1894],
	368: _KeyType_name[1894:1902],
	369: _KeyType_name[1902:1907],
	370: _KeyType_name[1907:1915],
	371: _KeyType_name[1915:1920],
	372: _KeyType_name[1920:1924],
	373: _KeyType_name[1924:1928],
	374: _KeyType_name[1928:1936],
	375: _KeyType_name[1936:1942],
	376: _KeyType_name[1942:1944],
	377: _KeyType_name[1944:1946],
	378: _KeyType_name[1946:1949],
	379: _KeyType_name[1949:1952],
	380: _KeyType_name[1952:1956],
	381: _KeyType_name[1956:1959],
	382: _KeyType_name[1959:1963],
	383: _KeyType_name[1963:1965],
	384: _KeyType_name[1965:1969],
	385: _KeyType_name[1969:1974],
	386: _KeyType_name[1974:1979],
	387: _KeyType_name[1979:1985],
	388: _KeyType_name[1985:1989],
	389: _KeyType_name[1989:1992],
	390: _KeyType_name[1992:1995],
	391: _KeyType_name[1995:1998],
	392: _KeyType_name[1998:2003],
	393: _KeyType_name[2003:2008],
	394: _KeyType_name[2008:2017],
	395: _KeyType_name[2017:2021],
	396: _KeyType_name[2021:2025],
	397: _KeyType_name[2025:2033],
	398: _KeyType_name[2033:2036],
	399: _KeyType_name[2036:2041],
	400: _KeyType_name[2041:2047],
	401: _KeyType_name[2047:2051],
	402: _KeyType_name[2051:2060],
	403: _KeyType_name[2060:2071],
	404: _KeyType_name[2071:2076],
	405: _KeyType_name[2076:2080],
	406: _KeyType_name[2080:2082],
	407: _KeyType_name[2082:2086],
	408: _KeyType_name[2086:2093],
	409: _KeyType_name[2093:2097],
	410: _KeyType_name[2097:2104],
	411: _KeyType_name[2104:2109],
	412: _KeyType_name[2109:2117],
	413: _KeyType_name[2117:2123],
	414: _KeyType_name[2123:2127],
	415: _KeyType_name[2127:2131],
	416: _KeyType_name[2131:2141],
	417: _KeyType_name[2141:2146],
	418: _KeyType_name[2146:2152],
	419: _KeyType_name[2152:2159],
	420: _KeyType_name[2159:2168],
	421: _KeyType_name[2168:2181],
	422: _KeyType_name[2181:2187],
	423: _KeyType_name[2187:2198],
	424: _KeyType_name[2198:2212],
	425: _KeyType_name[2212:2224],
	426: _KeyType_name[2224:2232],
	427: _KeyType_name[2232:2236],
	428: _KeyType_name[2236:2245],
	429: _KeyType_name[2245:2256],
	430: _KeyType_name[2256:2265],
	431: _KeyType_name[2265:2278],
	432: _KeyType_name[2278:2288],
	433: _KeyType_name[2288:2294],
	434: _KeyType_name[2294:2300],
	435: _KeyType_name[2300:2304],
	436: _KeyType_name[2304:2313],
	437: _KeyType_name[2313:2325],
	438: _KeyType_name[2325:2336],
	439: _KeyType_name[2336:2347],
	440: _KeyType_name[2347:2359],
	441: _KeyType_name[2359:2373],
	442: _KeyType_name[2373:2379],
	448: _KeyType_name[2379:2385],
	449: _KeyType_name[2385:2391],
	450: _KeyType_name[2391:2398],
	451: _KeyType_name[2398:2405],
	464: _KeyType_name[2405:2407],
	465: _KeyType_name[2407:2412],
	466: _KeyType_name[2412:2416],
	467: _KeyType_name[2416:2420],
	468: _KeyType_name[2420:2424],
	469: _KeyType_name[2424:2428],
	470: _KeyType_name[2428:2432],
	471: _KeyType_name[2432:2436],
	472: _KeyType_name[2436:2440],
	473: _KeyType_name[2440:2444],
	474: _KeyType_name[2444:2448],
	475: _KeyType_name[2448:2453],
	476: _KeyType_name[2453:2458],
	477: _KeyType_name[2458:2463],
	478: _KeyType_name[2463:2466],
	479: _KeyType_name[2466:2469],
	480: _KeyType_name[2469:2472],
	481: _KeyType_name[2472:2475],
	482: _KeyType_name[2475:2478],
	483: _KeyType_name[2478:2481],
	484: _KeyType_name[2481:2484],
	497: _KeyType_name[2484:2491],
	498: _KeyType_name[2491:2498],
	499: _KeyType_name[2498:2505],
	500: _KeyType_name[2505:2512],
	501: _KeyType_name[2512:2519],
	502: _KeyType_name[2519:2526],
	503: _KeyType_name[2526:2533],
	504: _KeyType_name[2533:2540],
	505: _KeyType_name[2540:2547],
	506: _KeyType_name[2547:2555],
	512: _KeyType_name[2555:2563],
	513: _KeyType_name[2563:2571],
	514: _KeyType_name[2571:2579],
	515: _KeyType_name[2579:2587],
	516: _KeyType_name[2587:2595],
	517: _KeyType_name[2595:2603],
	518: _KeyType_name[2603:2611],
	519: _KeyType_name[2611:2619],
	520: _KeyType_name[2619:2627],
	521: _KeyType_name[2627:2635],
	522: _KeyType_name[2635:2646],
	523: _KeyType_name[2646:2658],
	528: _KeyType_name[2658:2669],
	529: _KeyType_name[2669:2678],
	530: _KeyType_name[2678:2692],
	531: _KeyType_name[2692:2702],
	532: _KeyType_name[2702:2713],
	533: _KeyType_name[2713:2725],
	534: _KeyType_name[2725:2738],
	535: _KeyType_name[2738:2746],
	536: _KeyType_name[2746:2756],
	537: _KeyType_name[2756:2766],
	538: _KeyType_name[2766:2777],
	539: _KeyType_name[2777:2788],
	540: _KeyType_name[2788:2800],
	541: _KeyType_name[2800:2815],
	542: _KeyType_name[2815:2827],
	704: _KeyType_name[2827:2843],
	705: _KeyType_name[2843:2859],
	706: _KeyType_name[2859:2875],
	707: _KeyType_name[2875:2891],
	708: _KeyType_name[2891:2907],
	709: _KeyType_name[2907:2923],
	710: _KeyType_name[2923:2939],
	711: _KeyType_name[2939:2955],
	712: _KeyType_name[2955:2971],
	713: _KeyType_name[2971:2988],
	714: _KeyType_name[2988:3005],
	715: _KeyType_name[3005:3022],
	716: _KeyType_name[3022:3039],
	717: _KeyType_name[3039:3056],
	718: _KeyType_name[3056:3073],
	719: _KeyType_name[3073:3090],
	720: _KeyType_name[3090:3107],
	721: _KeyType_name[3107:3124],
	722: _KeyType_name[3124:3141],
	723: _KeyType_name[3141:3158],
	724: _KeyType_name[3158:3175],
	725: _KeyType_name[3175:3192],
	726: _KeyType_name[3192:3209],
	727: _KeyType_name[3209:3226],
	728: _KeyType_name[3226:3243],
	729: _KeyType_name[3243:3260],
	730: _KeyType_name[3260:3277],
	731: _KeyType_name[3277:3294],
	732: _KeyType_name[3294:3311],
	733: _KeyType_name[3311:3328],
	734: _KeyType_name[3328:3345],
	735: _KeyType_name[3345:3362],
	736: _KeyType_name[3362:3379],
	737: _KeyType_name[3379:3396],
	738: _KeyType_name[3396:3413],
	739: _KeyType_name[3413:3430],
	740: _KeyType_name[3430:3447],
	741: _KeyType_name[3447:3464],
	742: _KeyType_name[3464:3481],
	743: _KeyType_name[3481:3498],
}

func (i KeyType) String() string {
	if str, ok := _KeyType_map[i]; ok {
		return str
	}
	return "KeyType(" + strconv.FormatInt(int64(i), 10) + ")"
}

const _LEDType_name = "NumLockCapsLockScrollLockComposeKanaSleepSuspendMuteMiscMailCharging"

var _LEDType_index = [...]uint8{0, 7, 15, 25, 32, 36, 41, 48, 52, 56, 60, 68}

func (i LEDType) String() string {
	if i < 0 || i >= LEDType(len(_LEDType_index)-1) {
		return "LEDType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LEDType_name[_LEDType_index[i]:_LEDType_index[i+1]]
}

const _MiscType_name = "SerialPulseLEDGestureRawScanTimestamp"

var _MiscType_index = [...]uint8{0, 6, 14, 21, 24, 28, 37}

func (i MiscType) String() string {
	if i < 0 || i >= MiscType(len(_MiscType_index)-1) {
		return "MiscType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MiscType_name[_MiscType_index[i]:_MiscType_index[i+1]]
}

const _MtToolType_name = "FingerPen"

var _MtToolType_index = [...]uint8{0, 6, 9}

func (i MtToolType) String() string {
	if i < 0 || i >= MtToolType(len(_MtToolType_index)-1) {
		return "MtToolType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MtToolType_name[_MtToolType_index[i]:_MtToolType_index[i+1]]
}

const _PowerType_name = "OffOnStandby"

var _PowerType_index = [...]uint8{0, 3, 5, 12}

func (i PowerType) String() string {
	if i < 0 || i >= PowerType(len(_PowerType_index)-1) {
		return "PowerType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PowerType_name[_PowerType_index[i]:_PowerType_index[i+1]]
}

const _RelativeType_name = "XYZRXRYRZHWheelDialWheelMisc"

var _RelativeType_index = [...]uint8{0, 1, 2, 3, 5, 7, 9, 15, 19, 24, 28}

func (i RelativeType) String() string {
	if i < 0 || i >= RelativeType(len(_RelativeType_index)-1) {
		return "RelativeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RelativeType_name[_RelativeType_index[i]:_RelativeType_index[i+1]]
}

const _RepeatType_name = "DelayPeriod"

var _RepeatType_index = [...]uint8{0, 5, 11}

func (i RepeatType) String() string {
	if i < 0 || i >= RepeatType(len(_RepeatType_index)-1) {
		return "RepeatType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RepeatType_name[_RepeatType_index[i]:_RepeatType_index[i+1]]
}

const _SoundType_name = "ClickBellTone"

var _SoundType_index = [...]uint8{0, 5, 9, 13}

func (i SoundType) String() string {
	if i < 0 || i >= SoundType(len(_SoundType_index)-1) {
		return "SoundType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SoundType_name[_SoundType_index[i]:_SoundType_index[i+1]]
}

const _SwitchType_name = "LidTabletModeHeadphoneInsertRFKillAllMicrophoneInsertDockLineoutInsertJackPhysicalInsertVideoOutInsertCameraLensCoverKeypadSlideFrontProximityRotateLockLineInInsert"

var _SwitchType_index = [...]uint8{0, 3, 13, 28, 37, 53, 57, 70, 88, 102, 117, 128, 142, 152, 164}

func (i SwitchType) String() string {
	if i < 0 || i >= SwitchType(len(_SwitchType_index)-1) {
		return "SwitchType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SwitchType_name[_SwitchType_index[i]:_SwitchType_index[i+1]]
}

const _SyncType_name = "ReportConfigMTReportDropped"

var _SyncType_index = [...]uint8{0, 6, 12, 20, 27}

func (i SyncType) String() string {
	if i < 0 || i >= SyncType(len(_SyncType_index)-1) {
		return "SyncType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SyncType_name[_SyncType_index[i]:_SyncType_index[i+1]]
}
