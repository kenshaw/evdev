package evdev

import "strconv"

// Code generated by gen.sh; DO NOT EDIT.

const (
	_AbsoluteType_name_0 = "XYZRXRYRZThrottleRudderWheelGasBrake"
	_AbsoluteType_name_1 = "Hat0XHat0YHat1XHat1YHat2XHat2YHat3XHat3YPressureDistanceTiltXTiltYToolWidth"
	_AbsoluteType_name_2 = "Volume"
	_AbsoluteType_name_3 = "Misc"
	_AbsoluteType_name_4 = "MTSlotMTTouchMajorMTTouchMinorMTWidthMajorMTWidthMinorMTOrientationMTPositionXMTPositionYMTToolTypeMTBlobIDMTTrackingIDMTPressureMTDistanceMTToolXMTToolY"
)

var (
	_AbsoluteType_index_0 = [...]uint8{0, 1, 2, 3, 5, 7, 9, 17, 23, 28, 31, 36}
	_AbsoluteType_index_1 = [...]uint8{0, 5, 10, 15, 20, 25, 30, 35, 40, 48, 56, 61, 66, 75}
	_AbsoluteType_index_4 = [...]uint8{0, 6, 18, 30, 42, 54, 67, 78, 89, 99, 107, 119, 129, 139, 146, 153}
)

func (i AbsoluteType) String() string {
	switch {
	case 0 <= i && i <= 10:
		return _AbsoluteType_name_0[_AbsoluteType_index_0[i]:_AbsoluteType_index_0[i+1]]
	case 16 <= i && i <= 28:
		i -= 16
		return _AbsoluteType_name_1[_AbsoluteType_index_1[i]:_AbsoluteType_index_1[i+1]]
	case i == 32:
		return _AbsoluteType_name_2
	case i == 40:
		return _AbsoluteType_name_3
	case 47 <= i && i <= 61:
		i -= 47
		return _AbsoluteType_name_4[_AbsoluteType_index_4[i]:_AbsoluteType_index_4[i+1]]
	default:
		return "AbsoluteType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const (
	_BusType_name_0 = "PCIISAPNPUSBHILBluetoothVirtual"
	_BusType_name_1 = "ISAI8042XTKBDRS232GamePortParallelPortAmigaADBI2CHostGSCAtariSPIRMICECIntelISHTP"
)

var (
	_BusType_index_0 = [...]uint8{0, 3, 9, 12, 15, 24, 31}
	_BusType_index_1 = [...]uint8{0, 3, 8, 13, 18, 26, 38, 43, 46, 49, 53, 56, 61, 64, 67, 70, 80}
)

func (i BusType) String() string {
	switch {
	case 1 <= i && i <= 6:
		i -= 1
		return _BusType_name_0[_BusType_index_0[i]:_BusType_index_0[i+1]]
	case 16 <= i && i <= 31:
		i -= 16
		return _BusType_name_1[_BusType_index_1[i]:_BusType_index_1[i+1]]
	default:
		return "BusType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const _EffectType_name = "RumblePeriodicConstantSpringFrictionDamperInertiaRampSquareTriangleSineSawUpSawDownCustom"

var _EffectType_index = [...]uint8{0, 6, 14, 22, 28, 36, 42, 49, 53, 59, 67, 71, 76, 83, 89}

func (i EffectType) String() string {
	i -= 80
	if i < 0 || i >= EffectType(len(_EffectType_index)-1) {
		return "EffectType(" + strconv.FormatInt(int64(i+80), 10) + ")"
	}
	return _EffectType_name[_EffectType_index[i]:_EffectType_index[i+1]]
}

const (
	_EffectDirType_name_0 = "Down"
	_EffectDirType_name_1 = "Left"
	_EffectDirType_name_2 = "Up"
	_EffectDirType_name_3 = "Right"
)

func (i EffectDirType) String() string {
	switch {
	case i == 0:
		return _EffectDirType_name_0
	case i == 16384:
		return _EffectDirType_name_1
	case i == 32768:
		return _EffectDirType_name_2
	case i == 49152:
		return _EffectDirType_name_3
	default:
		return "EffectDirType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const _EffectPropType_name = "GainAutoCenter"

var _EffectPropType_index = [...]uint8{0, 4, 14}

func (i EffectPropType) String() string {
	i -= 96
	if i < 0 || i >= EffectPropType(len(_EffectPropType_index)-1) {
		return "EffectPropType(" + strconv.FormatInt(int64(i+96), 10) + ")"
	}
	return _EffectPropType_name[_EffectPropType_index[i]:_EffectPropType_index[i+1]]
}

const _EffectStatusType_name = "StoppedPlaying"

var _EffectStatusType_index = [...]uint8{0, 7, 14}

func (i EffectStatusType) String() string {
	if i < 0 || i >= EffectStatusType(len(_EffectStatusType_index)-1) {
		return "EffectStatusType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _EffectStatusType_name[_EffectStatusType_index[i]:_EffectStatusType_index[i+1]]
}

const (
	_EventType_name_0 = "SyncKeyRelativeAbsoluteMiscSwitch"
	_EventType_name_1 = "LEDSound"
	_EventType_name_2 = "RepeatEffectPowerEffectStatus"
)

var (
	_EventType_index_0 = [...]uint8{0, 4, 7, 15, 23, 27, 33}
	_EventType_index_1 = [...]uint8{0, 3, 8}
	_EventType_index_2 = [...]uint8{0, 6, 12, 17, 29}
)

func (i EventType) String() string {
	switch {
	case 0 <= i && i <= 5:
		return _EventType_name_0[_EventType_index_0[i]:_EventType_index_0[i+1]]
	case 17 <= i && i <= 18:
		i -= 17
		return _EventType_name_1[_EventType_index_1[i]:_EventType_index_1[i+1]]
	case 20 <= i && i <= 23:
		i -= 20
		return _EventType_name_2[_EventType_index_2[i]:_EventType_index_2[i+1]]
	default:
		return "EventType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const _KeyType_name = "ReservedEscape1234567890MinusEqualBackSpaceTabQWERTYUIOPLeftBraceRightBraceEnterLeftCtrlASDFGHJKLSemiColonApostropheGraveLeftShiftBackSlashZXCVBNMCommaDotSlashRightShiftKeypadAsteriskLeftAltSpaceCapsLockF1F2F3F4F5F6F7F8F9F10NumLockScrollLockKeypad7Keypad8Keypad9KeypadMinusKeypad4Keypad5Keypad6KeypadPlusKeypad1Keypad2Keypad3Keypad0KeypadDotZenkakuHankaku102NDF11F12ROKatakanaHiraganaHenkanKatakanaHiraganaMuhenkanKeypadJPCommaKeypadEnterRightCtrlKeypadSlashSysRQRightAltLineFeedHomeUpPageUpLeftRightEndDownPageDownInsertDeleteMacroMuteVolumeDownVolumeUpPowerKeypadEqualKeypadPlusMinusPauseScaleKeypadCommaHangulHanjaYenLeftMetaRightMetaComposeStopAgainPropsUndoFrontCopyOpenPasteFindCutHelpMenuCalcSetupSleepWakeupFileSendFileDeleteFileXferProg1Prog2WWWMSDOSScreenlockDirectionCycleWindowsMailBookmarksComputerBackForwardCloseCDEjectCDEjectCloseCDNextSongPlayPausePreviousSongStopCDRecordRewindPhoneISOConfigHomepageRefreshExitMoveEditScrollUpScrollDownKeypadLeftParenKeypadRightParenNewRedoF13F14F15F16F17F18F19F20F21F22F23F24PlayCDPauseCDProg3Prog4DashboardSuspendClosePlayFastForwardBassBoostPrintHPCameraSoundQuestionEmailChatSearchConnectFinanceSportShopAltEraseCancelBrightnessDownBrightnessUpMediaSwitchVideoModeKbdIllumToggleKbdIllumDownKbdIllumUpSendReplyForwardMailSaveDocumentsBatteryBluetoothWLANUWBUnknownVideoNextVideoPreviousBrightnessCycleBrightnessZeroDisplayOffWiMaxRFKillMicMuteBtn0Btn1Btn2Btn3Btn4Btn5Btn6Btn7Btn8Btn9BtnLeftBtnRightBtnMiddleBtnSideBtnExtraBtnForwardBtnBackBtnTaskBtnTriggerBtnThumbBtnThumb2BtnTopBtnTop2BtnPinkieBtnBaseBtnBase2BtnBase3BtnBase4BtnBase5BtnBase6BtnDeadBtnABtnBBtnCBtnXBtnYBtnZBtnTLBtnTRBtnTL2BtnTR2BtnSelectBtnStartBtnModeBtnThumbLBtnThumbRBtnToolPenBtnTooLRubberBtnToolBrushBtnToolPencilBtnToolAirbrushBtnToolFingerBtnToolMouseBtnToolLensBtnToolQuintTapBtnTouchBtnStylusBtnStylus2BtnToolDoubleTapBtnToolTrippleTapBtnToolQuadTapBtnGearDownBtnGearUpOkSelectGotoClearPower2OptionInfoTimeVendorArchiveProgramChannelFavoritesEPGPVRMHPLanguageTitleSubtitleAngleZoomModeKeyboardScreenPCTVTV2VCRVCR2SATSAT2CDTapeRadioTunerPlayerTextDVDAUXMP3AudioVideoDirectoryListMemoCalenderRedGreenYellowBlueChannelUpChannelDownFirstLastABNextRestartSlowShuffleBreakPreviousDigitsTeenTwenVideoPhoneGamesZoomInZoomOutZoomResetWordProcessorEditorSpreadsheetGraphicsEditorPresentationDatabaseNewsVoiceMailAddressBookMessengerDisplayToggleSpellCheckLogoffDollarEuroFrameBackframeForwardContextMenuMediaRepeat10ChannelsUp10ChannelsDownImagesDelEOLDelEOSInsLineDelLineFuncFuncEscFuncF1FuncF2FuncF3FuncF4FuncF5FuncF6FuncF7FuncF8FuncF9FuncF10FuncF11FuncF12Func1Func2FuncDFuncEFuncFFuncSFuncBBrailleDot1BrailleDot2BrailleDot3BrailleDot4BrailleDot5BrailleDot6BrailleDot7BrailleDot8BrailleDot9BrailleDot10Numeric0Numeric1Numeric2Numeric3Numeric4Numeric5Numeric6Numeric7Numeric8Numeric9NumericStarNumericPoundNumericANumericBNumericCNumericDCameraFocusWPSButtonTouchpadToggleTouchpadOnTouchpadOffCameraZoomInCameraZoomOutCameraUpCameraDownCameraLeftCameraRightAttendantOnAttendantOffAttendantToggleLightsToggleAlsToggleButtonConfigTaskManagerJournalControlPanelAppSelectScreensaverVoiceCommandAssistantBrightnessMinBrightnessMaxKbdInputPrevKbdInputNextKbdInputPrevGroupKbdInputNextGroupKbdInputAcceptKbdInputCancelRightUpRightDownLeftUpLeftDownRootMenuMediaTopMenuNumeric11Numeric12AudioDesc3dModeNextFavoriteStopRecordPauseRecordBtnTriggerHappy1BtnTriggerHappy2BtnTriggerHappy3BtnTriggerHappy4BtnTriggerHappy5BtnTriggerHappy6BtnTriggerHappy7BtnTriggerHappy8BtnTriggerHappy9BtnTriggerHappy10BtnTriggerHappy11BtnTriggerHappy12BtnTriggerHappy13BtnTriggerHappy14BtnTriggerHappy15BtnTriggerHappy16BtnTriggerHappy17BtnTriggerHappy18BtnTriggerHappy19BtnTriggerHappy20BtnTriggerHappy21BtnTriggerHappy22BtnTriggerHappy23BtnTriggerHappy24BtnTriggerHappy25BtnTriggerHappy26BtnTriggerHappy27BtnTriggerHappy28BtnTriggerHappy29BtnTriggerHappy30BtnTriggerHappy31BtnTriggerHappy32BtnTriggerHappy33BtnTriggerHappy34BtnTriggerHappy35BtnTriggerHappy36BtnTriggerHappy37BtnTriggerHappy38BtnTriggerHappy39BtnTriggerHappy40"

var _KeyType_map = map[KeyType]string{
	0:   _KeyType_name[0:8],
	1:   _KeyType_name[8:14],
	2:   _KeyType_name[14:15],
	3:   _KeyType_name[15:16],
	4:   _KeyType_name[16:17],
	5:   _KeyType_name[17:18],
	6:   _KeyType_name[18:19],
	7:   _KeyType_name[19:20],
	8:   _KeyType_name[20:21],
	9:   _KeyType_name[21:22],
	10:  _KeyType_name[22:23],
	11:  _KeyType_name[23:24],
	12:  _KeyType_name[24:29],
	13:  _KeyType_name[29:34],
	14:  _KeyType_name[34:43],
	15:  _KeyType_name[43:46],
	16:  _KeyType_name[46:47],
	17:  _KeyType_name[47:48],
	18:  _KeyType_name[48:49],
	19:  _KeyType_name[49:50],
	20:  _KeyType_name[50:51],
	21:  _KeyType_name[51:52],
	22:  _KeyType_name[52:53],
	23:  _KeyType_name[53:54],
	24:  _KeyType_name[54:55],
	25:  _KeyType_name[55:56],
	26:  _KeyType_name[56:65],
	27:  _KeyType_name[65:75],
	28:  _KeyType_name[75:80],
	29:  _KeyType_name[80:88],
	30:  _KeyType_name[88:89],
	31:  _KeyType_name[89:90],
	32:  _KeyType_name[90:91],
	33:  _KeyType_name[91:92],
	34:  _KeyType_name[92:93],
	35:  _KeyType_name[93:94],
	36:  _KeyType_name[94:95],
	37:  _KeyType_name[95:96],
	38:  _KeyType_name[96:97],
	39:  _KeyType_name[97:106],
	40:  _KeyType_name[106:116],
	41:  _KeyType_name[116:121],
	42:  _KeyType_name[121:130],
	43:  _KeyType_name[130:139],
	44:  _KeyType_name[139:140],
	45:  _KeyType_name[140:141],
	46:  _KeyType_name[141:142],
	47:  _KeyType_name[142:143],
	48:  _KeyType_name[143:144],
	49:  _KeyType_name[144:145],
	50:  _KeyType_name[145:146],
	51:  _KeyType_name[146:151],
	52:  _KeyType_name[151:154],
	53:  _KeyType_name[154:159],
	54:  _KeyType_name[159:169],
	55:  _KeyType_name[169:183],
	56:  _KeyType_name[183:190],
	57:  _KeyType_name[190:195],
	58:  _KeyType_name[195:203],
	59:  _KeyType_name[203:205],
	60:  _KeyType_name[205:207],
	61:  _KeyType_name[207:209],
	62:  _KeyType_name[209:211],
	63:  _KeyType_name[211:213],
	64:  _KeyType_name[213:215],
	65:  _KeyType_name[215:217],
	66:  _KeyType_name[217:219],
	67:  _KeyType_name[219:221],
	68:  _KeyType_name[221:224],
	69:  _KeyType_name[224:231],
	70:  _KeyType_name[231:241],
	71:  _KeyType_name[241:248],
	72:  _KeyType_name[248:255],
	73:  _KeyType_name[255:262],
	74:  _KeyType_name[262:273],
	75:  _KeyType_name[273:280],
	76:  _KeyType_name[280:287],
	77:  _KeyType_name[287:294],
	78:  _KeyType_name[294:304],
	79:  _KeyType_name[304:311],
	80:  _KeyType_name[311:318],
	81:  _KeyType_name[318:325],
	82:  _KeyType_name[325:332],
	83:  _KeyType_name[332:341],
	85:  _KeyType_name[341:355],
	86:  _KeyType_name[355:360],
	87:  _KeyType_name[360:363],
	88:  _KeyType_name[363:366],
	89:  _KeyType_name[366:368],
	90:  _KeyType_name[368:376],
	91:  _KeyType_name[376:384],
	92:  _KeyType_name[384:390],
	93:  _KeyType_name[390:406],
	94:  _KeyType_name[406:414],
	95:  _KeyType_name[414:427],
	96:  _KeyType_name[427:438],
	97:  _KeyType_name[438:447],
	98:  _KeyType_name[447:458],
	99:  _KeyType_name[458:463],
	100: _KeyType_name[463:471],
	101: _KeyType_name[471:479],
	102: _KeyType_name[479:483],
	103: _KeyType_name[483:485],
	104: _KeyType_name[485:491],
	105: _KeyType_name[491:495],
	106: _KeyType_name[495:500],
	107: _KeyType_name[500:503],
	108: _KeyType_name[503:507],
	109: _KeyType_name[507:515],
	110: _KeyType_name[515:521],
	111: _KeyType_name[521:527],
	112: _KeyType_name[527:532],
	113: _KeyType_name[532:536],
	114: _KeyType_name[536:546],
	115: _KeyType_name[546:554],
	116: _KeyType_name[554:559],
	117: _KeyType_name[559:570],
	118: _KeyType_name[570:585],
	119: _KeyType_name[585:590],
	120: _KeyType_name[590:595],
	121: _KeyType_name[595:606],
	122: _KeyType_name[606:612],
	123: _KeyType_name[612:617],
	124: _KeyType_name[617:620],
	125: _KeyType_name[620:628],
	126: _KeyType_name[628:637],
	127: _KeyType_name[637:644],
	128: _KeyType_name[644:648],
	129: _KeyType_name[648:653],
	130: _KeyType_name[653:658],
	131: _KeyType_name[658:662],
	132: _KeyType_name[662:667],
	133: _KeyType_name[667:671],
	134: _KeyType_name[671:675],
	135: _KeyType_name[675:680],
	136: _KeyType_name[680:684],
	137: _KeyType_name[684:687],
	138: _KeyType_name[687:691],
	139: _KeyType_name[691:695],
	140: _KeyType_name[695:699],
	141: _KeyType_name[699:704],
	142: _KeyType_name[704:709],
	143: _KeyType_name[709:715],
	144: _KeyType_name[715:719],
	145: _KeyType_name[719:727],
	146: _KeyType_name[727:737],
	147: _KeyType_name[737:741],
	148: _KeyType_name[741:746],
	149: _KeyType_name[746:751],
	150: _KeyType_name[751:754],
	151: _KeyType_name[754:759],
	152: _KeyType_name[759:769],
	153: _KeyType_name[769:778],
	154: _KeyType_name[778:790],
	155: _KeyType_name[790:794],
	156: _KeyType_name[794:803],
	157: _KeyType_name[803:811],
	158: _KeyType_name[811:815],
	159: _KeyType_name[815:822],
	160: _KeyType_name[822:829],
	161: _KeyType_name[829:836],
	162: _KeyType_name[836:848],
	163: _KeyType_name[848:856],
	164: _KeyType_name[856:865],
	165: _KeyType_name[865:877],
	166: _KeyType_name[877:883],
	167: _KeyType_name[883:889],
	168: _KeyType_name[889:895],
	169: _KeyType_name[895:900],
	170: _KeyType_name[900:903],
	171: _KeyType_name[903:909],
	172: _KeyType_name[909:917],
	173: _KeyType_name[917:924],
	174: _KeyType_name[924:928],
	175: _KeyType_name[928:932],
	176: _KeyType_name[932:936],
	177: _KeyType_name[936:944],
	178: _KeyType_name[944:954],
	179: _KeyType_name[954:969],
	180: _KeyType_name[969:985],
	181: _KeyType_name[985:988],
	182: _KeyType_name[988:992],
	183: _KeyType_name[992:995],
	184: _KeyType_name[995:998],
	185: _KeyType_name[998:1001],
	186: _KeyType_name[1001:1004],
	187: _KeyType_name[1004:1007],
	188: _KeyType_name[1007:1010],
	189: _KeyType_name[1010:1013],
	190: _KeyType_name[1013:1016],
	191: _KeyType_name[1016:1019],
	192: _KeyType_name[1019:1022],
	193: _KeyType_name[1022:1025],
	194: _KeyType_name[1025:1028],
	200: _KeyType_name[1028:1034],
	201: _KeyType_name[1034:1041],
	202: _KeyType_name[1041:1046],
	203: _KeyType_name[1046:1051],
	204: _KeyType_name[1051:1060],
	205: _KeyType_name[1060:1067],
	206: _KeyType_name[1067:1072],
	207: _KeyType_name[1072:1076],
	208: _KeyType_name[1076:1087],
	209: _KeyType_name[1087:1096],
	210: _KeyType_name[1096:1101],
	211: _KeyType_name[1101:1103],
	212: _KeyType_name[1103:1109],
	213: _KeyType_name[1109:1114],
	214: _KeyType_name[1114:1122],
	215: _KeyType_name[1122:1127],
	216: _KeyType_name[1127:1131],
	217: _KeyType_name[1131:1137],
	218: _KeyType_name[1137:1144],
	219: _KeyType_name[1144:1151],
	220: _KeyType_name[1151:1156],
	221: _KeyType_name[1156:1160],
	222: _KeyType_name[1160:1168],
	223: _KeyType_name[1168:1174],
	224: _KeyType_name[1174:1188],
	225: _KeyType_name[1188:1200],
	226: _KeyType_name[1200:1205],
	227: _KeyType_name[1205:1220],
	228: _KeyType_name[1220:1234],
	229: _KeyType_name[1234:1246],
	230: _KeyType_name[1246:1256],
	231: _KeyType_name[1256:1260],
	232: _KeyType_name[1260:1265],
	233: _KeyType_name[1265:1276],
	234: _KeyType_name[1276:1280],
	235: _KeyType_name[1280:1289],
	236: _KeyType_name[1289:1296],
	237: _KeyType_name[1296:1305],
	238: _KeyType_name[1305:1309],
	239: _KeyType_name[1309:1312],
	240: _KeyType_name[1312:1319],
	241: _KeyType_name[1319:1328],
	242: _KeyType_name[1328:1341],
	243: _KeyType_name[1341:1356],
	244: _KeyType_name[1356:1370],
	245: _KeyType_name[1370:1380],
	246: _KeyType_name[1380:1385],
	247: _KeyType_name[1385:1391],
	248: _KeyType_name[1391:1398],
	256: _KeyType_name[1398:1402],
	257: _KeyType_name[1402:1406],
	258: _KeyType_name[1406:1410],
	259: _KeyType_name[1410:1414],
	260: _KeyType_name[1414:1418],
	261: _KeyType_name[1418:1422],
	262: _KeyType_name[1422:1426],
	263: _KeyType_name[1426:1430],
	264: _KeyType_name[1430:1434],
	265: _KeyType_name[1434:1438],
	272: _KeyType_name[1438:1445],
	273: _KeyType_name[1445:1453],
	274: _KeyType_name[1453:1462],
	275: _KeyType_name[1462:1469],
	276: _KeyType_name[1469:1477],
	277: _KeyType_name[1477:1487],
	278: _KeyType_name[1487:1494],
	279: _KeyType_name[1494:1501],
	288: _KeyType_name[1501:1511],
	289: _KeyType_name[1511:1519],
	290: _KeyType_name[1519:1528],
	291: _KeyType_name[1528:1534],
	292: _KeyType_name[1534:1541],
	293: _KeyType_name[1541:1550],
	294: _KeyType_name[1550:1557],
	295: _KeyType_name[1557:1565],
	296: _KeyType_name[1565:1573],
	297: _KeyType_name[1573:1581],
	298: _KeyType_name[1581:1589],
	299: _KeyType_name[1589:1597],
	303: _KeyType_name[1597:1604],
	304: _KeyType_name[1604:1608],
	305: _KeyType_name[1608:1612],
	306: _KeyType_name[1612:1616],
	307: _KeyType_name[1616:1620],
	308: _KeyType_name[1620:1624],
	309: _KeyType_name[1624:1628],
	310: _KeyType_name[1628:1633],
	311: _KeyType_name[1633:1638],
	312: _KeyType_name[1638:1644],
	313: _KeyType_name[1644:1650],
	314: _KeyType_name[1650:1659],
	315: _KeyType_name[1659:1667],
	316: _KeyType_name[1667:1674],
	317: _KeyType_name[1674:1683],
	318: _KeyType_name[1683:1692],
	320: _KeyType_name[1692:1702],
	321: _KeyType_name[1702:1715],
	322: _KeyType_name[1715:1727],
	323: _KeyType_name[1727:1740],
	324: _KeyType_name[1740:1755],
	325: _KeyType_name[1755:1768],
	326: _KeyType_name[1768:1780],
	327: _KeyType_name[1780:1791],
	328: _KeyType_name[1791:1806],
	330: _KeyType_name[1806:1814],
	331: _KeyType_name[1814:1823],
	332: _KeyType_name[1823:1833],
	333: _KeyType_name[1833:1849],
	334: _KeyType_name[1849:1866],
	335: _KeyType_name[1866:1880],
	336: _KeyType_name[1880:1891],
	337: _KeyType_name[1891:1900],
	352: _KeyType_name[1900:1902],
	353: _KeyType_name[1902:1908],
	354: _KeyType_name[1908:1912],
	355: _KeyType_name[1912:1917],
	356: _KeyType_name[1917:1923],
	357: _KeyType_name[1923:1929],
	358: _KeyType_name[1929:1933],
	359: _KeyType_name[1933:1937],
	360: _KeyType_name[1937:1943],
	361: _KeyType_name[1943:1950],
	362: _KeyType_name[1950:1957],
	363: _KeyType_name[1957:1964],
	364: _KeyType_name[1964:1973],
	365: _KeyType_name[1973:1976],
	366: _KeyType_name[1976:1979],
	367: _KeyType_name[1979:1982],
	368: _KeyType_name[1982:1990],
	369: _KeyType_name[1990:1995],
	370: _KeyType_name[1995:2003],
	371: _KeyType_name[2003:2008],
	372: _KeyType_name[2008:2012],
	373: _KeyType_name[2012:2016],
	374: _KeyType_name[2016:2024],
	375: _KeyType_name[2024:2030],
	376: _KeyType_name[2030:2032],
	377: _KeyType_name[2032:2034],
	378: _KeyType_name[2034:2037],
	379: _KeyType_name[2037:2040],
	380: _KeyType_name[2040:2044],
	381: _KeyType_name[2044:2047],
	382: _KeyType_name[2047:2051],
	383: _KeyType_name[2051:2053],
	384: _KeyType_name[2053:2057],
	385: _KeyType_name[2057:2062],
	386: _KeyType_name[2062:2067],
	387: _KeyType_name[2067:2073],
	388: _KeyType_name[2073:2077],
	389: _KeyType_name[2077:2080],
	390: _KeyType_name[2080:2083],
	391: _KeyType_name[2083:2086],
	392: _KeyType_name[2086:2091],
	393: _KeyType_name[2091:2096],
	394: _KeyType_name[2096:2105],
	395: _KeyType_name[2105:2109],
	396: _KeyType_name[2109:2113],
	397: _KeyType_name[2113:2121],
	398: _KeyType_name[2121:2124],
	399: _KeyType_name[2124:2129],
	400: _KeyType_name[2129:2135],
	401: _KeyType_name[2135:2139],
	402: _KeyType_name[2139:2148],
	403: _KeyType_name[2148:2159],
	404: _KeyType_name[2159:2164],
	405: _KeyType_name[2164:2168],
	406: _KeyType_name[2168:2170],
	407: _KeyType_name[2170:2174],
	408: _KeyType_name[2174:2181],
	409: _KeyType_name[2181:2185],
	410: _KeyType_name[2185:2192],
	411: _KeyType_name[2192:2197],
	412: _KeyType_name[2197:2205],
	413: _KeyType_name[2205:2211],
	414: _KeyType_name[2211:2215],
	415: _KeyType_name[2215:2219],
	416: _KeyType_name[2219:2229],
	417: _KeyType_name[2229:2234],
	418: _KeyType_name[2234:2240],
	419: _KeyType_name[2240:2247],
	420: _KeyType_name[2247:2256],
	421: _KeyType_name[2256:2269],
	422: _KeyType_name[2269:2275],
	423: _KeyType_name[2275:2286],
	424: _KeyType_name[2286:2300],
	425: _KeyType_name[2300:2312],
	426: _KeyType_name[2312:2320],
	427: _KeyType_name[2320:2324],
	428: _KeyType_name[2324:2333],
	429: _KeyType_name[2333:2344],
	430: _KeyType_name[2344:2353],
	431: _KeyType_name[2353:2366],
	432: _KeyType_name[2366:2376],
	433: _KeyType_name[2376:2382],
	434: _KeyType_name[2382:2388],
	435: _KeyType_name[2388:2392],
	436: _KeyType_name[2392:2401],
	437: _KeyType_name[2401:2413],
	438: _KeyType_name[2413:2424],
	439: _KeyType_name[2424:2435],
	440: _KeyType_name[2435:2447],
	441: _KeyType_name[2447:2461],
	442: _KeyType_name[2461:2467],
	448: _KeyType_name[2467:2473],
	449: _KeyType_name[2473:2479],
	450: _KeyType_name[2479:2486],
	451: _KeyType_name[2486:2493],
	464: _KeyType_name[2493:2497],
	465: _KeyType_name[2497:2504],
	466: _KeyType_name[2504:2510],
	467: _KeyType_name[2510:2516],
	468: _KeyType_name[2516:2522],
	469: _KeyType_name[2522:2528],
	470: _KeyType_name[2528:2534],
	471: _KeyType_name[2534:2540],
	472: _KeyType_name[2540:2546],
	473: _KeyType_name[2546:2552],
	474: _KeyType_name[2552:2558],
	475: _KeyType_name[2558:2565],
	476: _KeyType_name[2565:2572],
	477: _KeyType_name[2572:2579],
	478: _KeyType_name[2579:2584],
	479: _KeyType_name[2584:2589],
	480: _KeyType_name[2589:2594],
	481: _KeyType_name[2594:2599],
	482: _KeyType_name[2599:2604],
	483: _KeyType_name[2604:2609],
	484: _KeyType_name[2609:2614],
	497: _KeyType_name[2614:2625],
	498: _KeyType_name[2625:2636],
	499: _KeyType_name[2636:2647],
	500: _KeyType_name[2647:2658],
	501: _KeyType_name[2658:2669],
	502: _KeyType_name[2669:2680],
	503: _KeyType_name[2680:2691],
	504: _KeyType_name[2691:2702],
	505: _KeyType_name[2702:2713],
	506: _KeyType_name[2713:2725],
	512: _KeyType_name[2725:2733],
	513: _KeyType_name[2733:2741],
	514: _KeyType_name[2741:2749],
	515: _KeyType_name[2749:2757],
	516: _KeyType_name[2757:2765],
	517: _KeyType_name[2765:2773],
	518: _KeyType_name[2773:2781],
	519: _KeyType_name[2781:2789],
	520: _KeyType_name[2789:2797],
	521: _KeyType_name[2797:2805],
	522: _KeyType_name[2805:2816],
	523: _KeyType_name[2816:2828],
	524: _KeyType_name[2828:2836],
	525: _KeyType_name[2836:2844],
	526: _KeyType_name[2844:2852],
	527: _KeyType_name[2852:2860],
	528: _KeyType_name[2860:2871],
	529: _KeyType_name[2871:2880],
	530: _KeyType_name[2880:2894],
	531: _KeyType_name[2894:2904],
	532: _KeyType_name[2904:2915],
	533: _KeyType_name[2915:2927],
	534: _KeyType_name[2927:2940],
	535: _KeyType_name[2940:2948],
	536: _KeyType_name[2948:2958],
	537: _KeyType_name[2958:2968],
	538: _KeyType_name[2968:2979],
	539: _KeyType_name[2979:2990],
	540: _KeyType_name[2990:3002],
	541: _KeyType_name[3002:3017],
	542: _KeyType_name[3017:3029],
	560: _KeyType_name[3029:3038],
	576: _KeyType_name[3038:3050],
	577: _KeyType_name[3050:3061],
	578: _KeyType_name[3061:3068],
	579: _KeyType_name[3068:3080],
	580: _KeyType_name[3080:3089],
	581: _KeyType_name[3089:3100],
	582: _KeyType_name[3100:3112],
	583: _KeyType_name[3112:3121],
	592: _KeyType_name[3121:3134],
	593: _KeyType_name[3134:3147],
	608: _KeyType_name[3147:3159],
	609: _KeyType_name[3159:3171],
	610: _KeyType_name[3171:3188],
	611: _KeyType_name[3188:3205],
	612: _KeyType_name[3205:3219],
	613: _KeyType_name[3219:3233],
	614: _KeyType_name[3233:3240],
	615: _KeyType_name[3240:3249],
	616: _KeyType_name[3249:3255],
	617: _KeyType_name[3255:3263],
	618: _KeyType_name[3263:3271],
	619: _KeyType_name[3271:3283],
	620: _KeyType_name[3283:3292],
	621: _KeyType_name[3292:3301],
	622: _KeyType_name[3301:3310],
	623: _KeyType_name[3310:3316],
	624: _KeyType_name[3316:3328],
	625: _KeyType_name[3328:3338],
	626: _KeyType_name[3338:3349],
	704: _KeyType_name[3349:3365],
	705: _KeyType_name[3365:3381],
	706: _KeyType_name[3381:3397],
	707: _KeyType_name[3397:3413],
	708: _KeyType_name[3413:3429],
	709: _KeyType_name[3429:3445],
	710: _KeyType_name[3445:3461],
	711: _KeyType_name[3461:3477],
	712: _KeyType_name[3477:3493],
	713: _KeyType_name[3493:3510],
	714: _KeyType_name[3510:3527],
	715: _KeyType_name[3527:3544],
	716: _KeyType_name[3544:3561],
	717: _KeyType_name[3561:3578],
	718: _KeyType_name[3578:3595],
	719: _KeyType_name[3595:3612],
	720: _KeyType_name[3612:3629],
	721: _KeyType_name[3629:3646],
	722: _KeyType_name[3646:3663],
	723: _KeyType_name[3663:3680],
	724: _KeyType_name[3680:3697],
	725: _KeyType_name[3697:3714],
	726: _KeyType_name[3714:3731],
	727: _KeyType_name[3731:3748],
	728: _KeyType_name[3748:3765],
	729: _KeyType_name[3765:3782],
	730: _KeyType_name[3782:3799],
	731: _KeyType_name[3799:3816],
	732: _KeyType_name[3816:3833],
	733: _KeyType_name[3833:3850],
	734: _KeyType_name[3850:3867],
	735: _KeyType_name[3867:3884],
	736: _KeyType_name[3884:3901],
	737: _KeyType_name[3901:3918],
	738: _KeyType_name[3918:3935],
	739: _KeyType_name[3935:3952],
	740: _KeyType_name[3952:3969],
	741: _KeyType_name[3969:3986],
	742: _KeyType_name[3986:4003],
	743: _KeyType_name[4003:4020],
}

func (i KeyType) String() string {
	if str, ok := _KeyType_map[i]; ok {
		return str
	}
	return "KeyType(" + strconv.FormatInt(int64(i), 10) + ")"
}

const _LEDType_name = "NumLockCapsLockScrollLockComposeKanaSleepSuspendMuteMiscMailCharging"

var _LEDType_index = [...]uint8{0, 7, 15, 25, 32, 36, 41, 48, 52, 56, 60, 68}

func (i LEDType) String() string {
	if i < 0 || i >= LEDType(len(_LEDType_index)-1) {
		return "LEDType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LEDType_name[_LEDType_index[i]:_LEDType_index[i+1]]
}

const _MiscType_name = "SerialPulseLEDGestureRawScanTimestamp"

var _MiscType_index = [...]uint8{0, 6, 14, 21, 24, 28, 37}

func (i MiscType) String() string {
	if i < 0 || i >= MiscType(len(_MiscType_index)-1) {
		return "MiscType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MiscType_name[_MiscType_index[i]:_MiscType_index[i+1]]
}

const _MTToolType_name = "FingerPen"

var _MTToolType_index = [...]uint8{0, 6, 9}

func (i MTToolType) String() string {
	if i < 0 || i >= MTToolType(len(_MTToolType_index)-1) {
		return "MTToolType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MTToolType_name[_MTToolType_index[i]:_MTToolType_index[i+1]]
}

const _PowerType_name = "OffOnStandby"

var _PowerType_index = [...]uint8{0, 3, 5, 12}

func (i PowerType) String() string {
	if i < 0 || i >= PowerType(len(_PowerType_index)-1) {
		return "PowerType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PowerType_name[_PowerType_index[i]:_PowerType_index[i+1]]
}

const _PropertyType_name = "PointerDirectButtonPadSemiMTTopButtonPadPointingStickAccelerometer"

var _PropertyType_index = [...]uint8{0, 7, 13, 22, 28, 40, 53, 66}

func (i PropertyType) String() string {
	if i < 0 || i >= PropertyType(len(_PropertyType_index)-1) {
		return "PropertyType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PropertyType_name[_PropertyType_index[i]:_PropertyType_index[i+1]]
}

const _RelativeType_name = "XYZRXRYRZHWheelDialWheelMisc"

var _RelativeType_index = [...]uint8{0, 1, 2, 3, 5, 7, 9, 15, 19, 24, 28}

func (i RelativeType) String() string {
	if i < 0 || i >= RelativeType(len(_RelativeType_index)-1) {
		return "RelativeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RelativeType_name[_RelativeType_index[i]:_RelativeType_index[i+1]]
}

const _RepeatType_name = "DelayPeriod"

var _RepeatType_index = [...]uint8{0, 5, 11}

func (i RepeatType) String() string {
	if i < 0 || i >= RepeatType(len(_RepeatType_index)-1) {
		return "RepeatType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RepeatType_name[_RepeatType_index[i]:_RepeatType_index[i+1]]
}

const _SoundType_name = "ClickBellTone"

var _SoundType_index = [...]uint8{0, 5, 9, 13}

func (i SoundType) String() string {
	if i < 0 || i >= SoundType(len(_SoundType_index)-1) {
		return "SoundType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SoundType_name[_SoundType_index[i]:_SoundType_index[i+1]]
}

const _SwitchType_name = "LidTabletModeHeadphoneInsertRFKillAllMicrophoneInsertDockLineoutInsertJackPhysicalInsertVideoOutInsertCameraLensCoverKeypadSlideFrontProximityRotateLockLineInInsert"

var _SwitchType_index = [...]uint8{0, 3, 13, 28, 37, 53, 57, 70, 88, 102, 117, 128, 142, 152, 164}

func (i SwitchType) String() string {
	if i < 0 || i >= SwitchType(len(_SwitchType_index)-1) {
		return "SwitchType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SwitchType_name[_SwitchType_index[i]:_SwitchType_index[i+1]]
}

const _SyncType_name = "ReportConfigMTReportDropped"

var _SyncType_index = [...]uint8{0, 6, 12, 20, 27}

func (i SyncType) String() string {
	if i < 0 || i >= SyncType(len(_SyncType_index)-1) {
		return "SyncType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SyncType_name[_SyncType_index[i]:_SyncType_index[i+1]]
}
